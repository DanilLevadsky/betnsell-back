datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  password   String
  profilePic String?    @map("profile_pic")
  mobile     String?    @unique @map("mobile_number")
  balance    Int        @default(0)
  name       String?
  // customer <- user one-to-many relation
  customers  Customer[]
  // user <- producte one-to-many relation
  Product    Product[]
}

model Customer {
  id        Int      @id @default(autoincrement())
  sum       Int
  // auction <- customer one-to-many relation
  customer  Auction  @relation("customers", fields: [auctionId], references: [id])
  auctionId Int
  // customer <- user one-to-many relation
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  // auction <-> customer one-to-one relation
  winner    Auction? @relation("winner")
  // customer <- ticket one-to-many relation
  tickets   Ticket[]
}

model Auction {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now()) @map("created_at")
  status        Status     @default(STARTED)
  updatedAt     DateTime   @updatedAt @map("updated_at")
  lotFinishDate DateTime   @map("lot_finish_date")
  lotExpireDate DateTime   @map("lot_expire_date")
  // auction <- customer one-to-many relation
  customers     Customer[] @relation("customers")
  // auction <-> product one-to-one relation
  product       Product    @relation(fields: [productId], references: [id])
  productId     Int
  // auction <-> customer one-to-one relation
  customer      Customer?  @relation("winner", fields: [customerId], references: [id])
  customerId    Int?       @map("winner")
  // auction <- ticket one-to-many relation
  //tickets       Ticket[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  price       Int
  description String?
  photo       String?
  // auction <-> product one-to-one relation
  auction     Auction?
  // product -> user one-to-many relation
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @map("owner")
}

model Ticket {
  id         Int       @id @default(autoincrement())
  isWinning  Boolean   @default(false)
  //  Auction    Auction   @relation(fields: [auctionId], references: [id])
  auctionId  Int
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?      @map("owner")
}

// Status table resembles to current condition of auction
enum Status {
  // Auction created.
  STARTED   @map("started")
  // Waiting lot to be sent
  WAITING   @map("waiting")
  // Owner failed to send the lot in time.
  EXPIRED   @map("expired")
  // Winner received the lot.
  FINISHED  @map("finished")

  @@map("_Status")
}
